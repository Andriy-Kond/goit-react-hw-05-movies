{"version":3,"file":"static/js/134.d3e31fb9.chunk.js","mappings":"8MAmKA,UA7Je,WAAO,IAAD,EAEnB,GAA0BA,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAGA,GAAwCC,EAAAA,EAAAA,iBAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KAGMC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACzCC,EAAiB,eACvB,GAAsCV,EAAAA,EAAAA,UAAS,IAA/C,eAAOW,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAASJ,EAAmBJ,GACzBS,MAAK,SAAAC,GAGJJ,EAAeI,EAASC,QACzB,IACAC,OAAM,SAAAjB,GACLC,EAASD,GACTG,EAAU,WACX,GACJ,GAAE,CAACM,EAAmBJ,IAGvB,IAAMa,GAAWC,EAAAA,EAAAA,MASjB,MAAe,aAAXjB,GACK,8EAAiBF,EAAMoB,YAI9B,iCACE,eACEC,MAAO,CACLC,UAAW,QAFf,mCAOA,wDACA,eACED,MAAO,CACLE,aAAc,QAFlB,2CAOA,kBAAOC,KAAK,OAAOC,SA1BG,SAAC,GAA2B,IAAfC,EAAc,EAAxBC,OAAUD,MAErCpB,EAD4B,KAAVoB,EAAe,CAAC,EAAI,CAAEE,MAAOF,GAEhD,EAuBmDA,MAAOnB,IAE/B,IAAvBG,EAAYmB,SACX,gBAAKC,UAAU,YAAYC,GAAG,mBAA9B,SACGrB,EAAYsB,KAAI,SAAAC,GACf,OACE,0BACE,iBAAKH,UAAU,iBAAf,WACE,eAAIA,UAAU,mBAAd,UACE,oBACEA,UAAU,6BACVN,KAAK,SACL,iBAAe,WACf,wCAAgCS,EAAMF,IACtC,gBAAc,QACd,sCAA8BE,EAAMF,IACpCV,MAAO,CAAEa,SAAU,UAPrB,+BAUE,4CAAaD,EAAME,OAAnB,aAGJ,gBACEJ,GAAE,sBAAiBE,EAAMF,IACzBD,UAAU,8BACV,iBAAe,oBAHjB,UAKE,iBACEA,UAAU,iBACVT,MAAO,CACLe,MAAO,OACPC,QAAS,QAJb,WAOE,gBACEC,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxCC,EAENV,UAAU,eACVW,IAAI,MACJpB,MAAO,CACLqB,SAAU,QACVC,SAAU,QACVC,OAAQ,OACRC,YAAa,WAGjB,iBACExB,MAAO,CACLgB,QAAS,OACTS,cAAe,UAHnB,WAME,2BACE,+CACA,cAAGzB,MAAO,CAAE0B,OAAQ,GAApB,SAA0Bd,EAAMe,mBAGlC,eAAG3B,MAAO,CAAEE,aAAc,OAA1B,+BACqB,KACnB,4BACGU,EAAMgB,kBAAkBC,oBAI7B,0BACE,wCADF,KAC2B,mBACzB,6CAAqBjB,EAAMkB,gBAF7B,KAEkD,mBAChD,4CAAoBlB,EAAMmB,kBAG5B,2BACE,4CACA,cAAG/B,MAAO,CAAEa,SAAU,QAAtB,SACGD,EAAMoB,SAAWpB,EAAMoB,SAAW,kBAIvC,SAAC,EAAAC,KAAD,CACEC,GAAE,UAAKtB,EAAMF,IACbD,UAAU,kBACV0B,MAAOtC,EAHT,kDA1EAe,EAAMF,GAuFnB,QAKV,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { getQuery } from 'services/fetch';\nimport defaultImg from '../images/noPoster.webp';\n\n// Пошук фільмів за ключовим словом\nconst Movies = () => {\n  // Стейти для помилки\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n\n  // Стейт параметрів адресного рядку\n  const [searchParams, setSearchParams] = useSearchParams({}); //? Об'єкт чи пустий рядок?\n\n  // Стейт для фільтру Input\n  const movieName = searchParams.get('query') ?? ''; // для запису у input.value\n  const URL_QUERY_OPTIONS = `search/movie`; // рядок запиту згідно з API\n  const [foundMovies, setFoundMovies] = useState([]); // масив знайдених фільмів\n\n  useEffect(() => {\n    getQuery(URL_QUERY_OPTIONS, searchParams)\n      .then(response => {\n        // console.log('getQuery >> response:', response);\n        // console.log(response.results);\n        setFoundMovies(response.results);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [URL_QUERY_OPTIONS, searchParams]);\n\n  // Для кнопки повернення з дочірніх елементів\n  const location = useLocation();\n  // console.log('Movies >> location:', location);\n\n  // Встановлення в адресний рядок значення з Input.onChange\n  const updateInputSearch = ({ target: { value } }) => {\n    const searchObj = value === '' ? {} : { query: value };\n    setSearchParams(searchObj);\n  };\n\n  if (status === 'rejected') {\n    return <h2>{`Помилка: ${error.message}`}</h2>;\n  }\n\n  return (\n    <>\n      <h2\n        style={{\n          marginTop: '20px',\n        }}\n      >\n        It is the Movie Page\n      </h2>\n      <h3>Here you can search movies</h3>\n      <h4\n        style={{\n          marginBottom: '20px',\n        }}\n      >\n        Start enter movie name below\n      </h4>\n      <input type=\"text\" onChange={updateInputSearch} value={movieName} />\n\n      {foundMovies.length !== 0 && (\n        <div className=\"accordion\" id=\"accordionExample\">\n          {foundMovies.map(movie => {\n            return (\n              <div key={movie.id}>\n                <div className=\"accordion-item\">\n                  <h2 className=\"accordion-header\">\n                    <button\n                      className=\"accordion-button collapsed\"\n                      type=\"button\"\n                      data-bs-toggle=\"collapse\"\n                      data-bs-target={`#collapseTwo-${movie.id}`}\n                      aria-expanded=\"false\"\n                      aria-controls={`collapseTwo-${movie.id}`}\n                      style={{ fontSize: '1.2rem' }}\n                    >\n                      Movie title: &nbsp;\n                      <strong> {`${movie.title}`} </strong>\n                    </button>\n                  </h2>\n                  <div\n                    id={`collapseTwo-${movie.id}`}\n                    className=\"accordion-collapse collapse\"\n                    data-bs-parent=\"#accordionExample\"\n                  >\n                    <div\n                      className=\"accordion-body\"\n                      style={{\n                        width: '100%',\n                        display: 'flex',\n                      }}\n                    >\n                      <img\n                        src={\n                          movie.poster_path\n                            ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                            : defaultImg\n                        }\n                        className=\"card-img-top\"\n                        alt=\"...\"\n                        style={{\n                          minWidth: '200px',\n                          maxWidth: '200px',\n                          height: '100%',\n                          marginRight: '20px',\n                        }}\n                      />\n                      <div\n                        style={{\n                          display: 'flex',\n                          flexDirection: 'column',\n                        }}\n                      >\n                        <h4>\n                          <strong>Release date:</strong>\n                          <p style={{ margin: 0 }}>{movie.release_date}</p>\n                        </h4>\n\n                        <p style={{ marginBottom: '5px' }}>\n                          Original language:{' '}\n                          <strong>\n                            {movie.original_language.toUpperCase()}\n                          </strong>\n                        </p>\n\n                        <p>\n                          <strong>Rating:</strong> <br />\n                          <span>Average vote: {movie.vote_average}</span> <br />\n                          <span>Total votes: {movie.vote_count}</span>\n                        </p>\n\n                        <h5>\n                          <strong>Overview: </strong>\n                          <p style={{ fontSize: '1rem' }}>\n                            {movie.overview ? movie.overview : 'No review'}\n                          </p>\n                        </h5>\n\n                        <Link\n                          to={`${movie.id}`}\n                          className=\"btn btn-primary\"\n                          state={location}\n                        >\n                          See more movie's details\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","error","setError","status","setStatus","useSearchParams","searchParams","setSearchParams","movieName","get","URL_QUERY_OPTIONS","foundMovies","setFoundMovies","useEffect","getQuery","then","response","results","catch","location","useLocation","message","style","marginTop","marginBottom","type","onChange","value","target","query","length","className","id","map","movie","fontSize","title","width","display","src","poster_path","defaultImg","alt","minWidth","maxWidth","height","marginRight","flexDirection","margin","release_date","original_language","toUpperCase","vote_average","vote_count","overview","Link","to","state"],"sourceRoot":""}