{"version":3,"file":"static/js/106.25203d6b.chunk.js","mappings":"kOAaMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,QAAPD,CAAH,kFAgKnB,UAvJqB,WAAO,IAAD,IACzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEQC,GAAiBC,EAAAA,EAAAA,MAAjBD,aACFE,EAAiB,gBAAYF,GACnC,GAAgDL,EAAAA,EAAAA,UAAS,CAAC,GAA1D,eAAOQ,EAAP,KAAyBC,EAAzB,KAEMC,GAAWC,EAAAA,EAAAA,MAGXC,GAAsBC,EAAAA,EAAAA,QAAM,UAACH,EAASI,aAAV,QAAmB,WAerD,IAZAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAST,GACNU,MAAK,SAAAC,GAEJT,EAAoBS,EACrB,IACAC,OAAM,SAAAlB,GACLC,EAASD,GACTG,EAAU,WACX,GACJ,GAAE,CAACG,IAEW,aAAXJ,EAEF,OACE,iCACE,8EAAiBF,EAAMmB,YACvB,SAAC,EAAAC,KAAD,CAAMC,GAAIV,EAAoBW,QAA9B,UACE,kIAKR,IACEC,EAUEhB,EAVFgB,eACAC,EASEjB,EATFiB,YACAC,EAQElB,EARFkB,SACAC,EAOEnB,EAPFmB,aACAC,EAMEpB,EANFoB,qBACAC,EAKErB,EALFqB,kBACAC,EAIEtB,EAJFsB,QACAC,EAGEvB,EAHFuB,aACAC,EAEExB,EAFFwB,WACAC,EACEzB,EADFyB,SAIF,OACE,gCAC4C,IAAzCC,OAAOC,KAAK3B,GAAkB4B,SAC7B,4BACE,yCAAiBZ,EAAjB,cACA,SAAC,EAAAH,KAAD,CAAMC,GAAIV,EAAoBW,QAA9B,UACE,gIAGF,iBAAKc,UAAU,OAAOC,MAAO,CAAEC,MAAO,SAAtC,WACE,gBACEC,IACEf,EAAW,yCAC2BA,GAClCgB,EAENJ,UAAU,eACVK,IAAI,MACJJ,MAAO,CACLK,OAAQ,OACRJ,MAAO,WAGX,iBAAKF,UAAU,YAAf,WACE,eAAIA,UAAU,aAAd,SAA4Bb,KAC5B,uBAAIE,GAAsB,eAE1B,iBACEY,MAAO,CACLM,QAAS,OACTC,cAAe,UAHnB,WAME,2BACE,+CACA,cAAGP,MAAO,CAAEQ,OAAQ,GAApB,SAA0BnB,QAG5B,eAAGW,MAAO,CAAES,aAAc,OAA1B,8BACoB,KAClB,4BACmC,IAAhCnB,EAAqBQ,OAArB,UACGR,EAAqB,UADxB,aACG,EAAyBoB,WAAWC,cACpC,gBAIR,eAAGX,MAAO,CAAES,aAAc,OAA1B,+BACqB,KACnB,4BAASlB,EAAkBoB,oBAE7B,eAAGX,MAAO,CAAES,aAAc,OAA1B,uBACW,8BAASjB,EAAT,aAEX,0BACE,wCADF,KAC2B,mBACzB,8CACgB,4BAASC,QAEzB,mBACA,6CACe,4BAASC,cAK5B,SAAC,EAAAX,KAAD,CACEC,GAAIW,GAAsB,IAC1BI,UAAU,kBACVa,OAAO,SACPC,IAAI,aAJN,yCAWJ,2BACE,yBACE,SAACtD,EAAD,CAAeyB,GAAG,OAAlB,gCAEF,yBACE,SAACzB,EAAD,CAAeyB,GAAG,UAAlB,yCAKR,SAAC,EAAA8B,SAAD,CACEC,UACE,gBAAKhB,UAAU,eAAeiB,KAAK,SAAnC,UACE,iBAAMjB,UAAU,kBAAhB,0BAHN,UAOE,SAAC,KAAD,QAIP,C","sources":["components/MovieDetails.jsx"],"sourcesContent":["import { Suspense, useRef, useState } from 'react';\nimport { useEffect } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { getQuery } from 'services/fetch';\nimport styled from 'styled-components';\nimport defaultImg from '../images/noPoster.webp';\n\nconst StyledNavLink = styled(NavLink)`\n  color: black;\n\n  &.active {\n    color: orange;\n  }\n`;\n\n// Сторінка з детальною інформацією про фільм\nconst MovieDetails = () => {\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState('');\n\n  const { currentMovie } = useParams(); // забираю ID фільму з адресного рядку браузера\n  const URL_QUERY_OPTIONS = `movie/${currentMovie}`; // рядок запиту згідно з API\n  const [currentMovieResp, setCurrentMovieResp] = useState({});\n\n  const location = useLocation();\n  // console.log('MovieDetails >> location:', location);\n\n  const backLinkLocationRef = useRef(location.state ?? '/movies'); // якщо немає location.state (відкрили в новій вкладці), то повернення буде на стартову сторінку\n  // console.log('MovieDetails >> backLinkLocationRef:', backLinkLocationRef);\n\n  useEffect(() => {\n    getQuery(URL_QUERY_OPTIONS)\n      .then(response => {\n        // console.log('response', response);\n        setCurrentMovieResp(response);\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [URL_QUERY_OPTIONS]);\n\n  if (status === 'rejected') {\n    // console.log(error.message);\n    return (\n      <>\n        <h2>{`Помилка: ${error.message}`}</h2>\n        <Link to={backLinkLocationRef.current}>\n          <p>Повернутись назад</p>\n        </Link>\n      </>\n    );\n  }\n  const {\n    original_title,\n    poster_path,\n    overview,\n    release_date,\n    production_countries,\n    original_language,\n    runtime,\n    vote_average,\n    vote_count,\n    homepage,\n  } = currentMovieResp;\n\n  // Щоб заглушка-зображення не блимала при оновленні сторінки, рендерю лише коли об'єкт не пустий\n  return (\n    <>\n      {Object.keys(currentMovieResp).length !== 0 && (\n        <div>\n          <h1>Details of \"{original_title}\" movie</h1>\n          <Link to={backLinkLocationRef.current}>\n            <p>Повернутись назад</p>\n          </Link>\n\n          <div className=\"card\" style={{ width: '38rem' }}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : defaultImg\n              }\n              className=\"card-img-top\"\n              alt=\"...\"\n              style={{\n                height: '100%',\n                width: '100%',\n              }}\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{original_title}</h5>\n              <p>{overview ? overview : 'No review'}</p>\n\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                }}\n              >\n                <h4>\n                  <strong>Release date:</strong>\n                  <p style={{ margin: 0 }}>{release_date}</p>\n                </h4>\n\n                <p style={{ marginBottom: '5px' }}>\n                  Original country:{' '}\n                  <strong>\n                    {production_countries.length !== 0\n                      ? production_countries[0]?.iso_3166_1.toUpperCase()\n                      : 'No data'}\n                  </strong>\n                </p>\n\n                <p style={{ marginBottom: '5px' }}>\n                  Original language:{' '}\n                  <strong>{original_language.toUpperCase()}</strong>\n                </p>\n                <p style={{ marginBottom: '5px' }}>\n                  Runtime: <strong>{runtime}min</strong>\n                </p>\n                <p>\n                  <strong>Rating:</strong> <br />\n                  <span>\n                    Average vote: <strong>{vote_average}</strong>\n                  </span>\n                  <br />\n                  <span>\n                    Total votes: <strong>{vote_count}</strong>\n                  </span>\n                </p>\n              </div>\n\n              <Link\n                to={homepage ? homepage : '*'}\n                className=\"btn btn-primary\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Go to the movie page\n              </Link>\n            </div>\n          </div>\n\n          <ul>\n            <li>\n              <StyledNavLink to=\"cast\">to movie's cast</StyledNavLink>\n            </li>\n            <li>\n              <StyledNavLink to=\"reviews\">to movie's reviews</StyledNavLink>\n            </li>\n          </ul>\n        </div>\n      )}\n      <Suspense\n        fallback={\n          <div className=\"spinner-grow\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledNavLink","styled","NavLink","useState","error","setError","status","setStatus","currentMovie","useParams","URL_QUERY_OPTIONS","currentMovieResp","setCurrentMovieResp","location","useLocation","backLinkLocationRef","useRef","state","useEffect","getQuery","then","response","catch","message","Link","to","current","original_title","poster_path","overview","release_date","production_countries","original_language","runtime","vote_average","vote_count","homepage","Object","keys","length","className","style","width","src","defaultImg","alt","height","display","flexDirection","margin","marginBottom","iso_3166_1","toUpperCase","target","rel","Suspense","fallback","role"],"sourceRoot":""}